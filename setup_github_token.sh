#!/bin/bash

# Cores para melhor visualiza√ß√£o
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}==========================================================${NC}"
echo -e "${BLUE}     Configura√ß√£o do GitHub Personal Access Token (PAT)   ${NC}"
echo -e "${BLUE}==========================================================${NC}"
echo ""

# Verifica√ß√£o de seguran√ßa
echo -e "${RED}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
echo -e "${RED}‚ïë                    ‚ö†Ô∏è  AVISO IMPORTANTE ‚ö†Ô∏è             ‚ïë${NC}"
echo -e "${RED}‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£${NC}"
echo -e "${RED}‚ïë  EXECUTE ESTE SCRIPT APENAS EM SUA M√ÅQUINA PESSOAL!    ‚ïë${NC}"
echo -e "${RED}‚ïë                                                        ‚ïë${NC}"
echo -e "${RED}‚ïë  ‚ùå N√ÉO execute em computadores do laborat√≥rio         ‚ïë${NC}"
echo -e "${RED}‚ïë  ‚ùå N√ÉO execute em computadores compartilhados         ‚ïë${NC}"
echo -e "${RED}‚ïë  ‚ùå N√ÉO compartilhe seu token com NINGU√âM              ‚ïë${NC}"
echo -e "${RED}‚ïë                                                        ‚ïë${NC}"
echo -e "${RED}‚ïë  Seu token d√° acesso completo aos seus reposit√≥rios!   ‚ïë${NC}"
echo -e "${RED}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
echo ""

# Confirma√ß√£o de seguran√ßa
read -p "Voc√™ est√° em sua m√°quina pessoal? (digite 'sim' para continuar): " CONFIRMACAO

if [ "$CONFIRMACAO" != "sim" ]; then
    echo -e "${RED}Configura√ß√£o cancelada. Execute apenas em sua m√°quina pessoal.${NC}"
    exit 1
fi

echo ""
echo -e "${GREEN}‚úì Continuando com a configura√ß√£o...${NC}"
echo ""

# Verificar se git est√° instalado
if ! command -v git &> /dev/null; then
    echo -e "${RED}Git n√£o est√° instalado. Por favor, instale o Git primeiro.${NC}"
    echo "Ubuntu/Debian: sudo apt install git"
    echo "Fedora: sudo dnf install git"
    echo "macOS: brew install git"
    exit 1
fi

# Passo 1: Configurar nome e email (se ainda n√£o configurado)
echo -e "${YELLOW}‚ïê‚ïê‚ïê Passo 1: Configura√ß√£o do Git ‚ïê‚ïê‚ïê${NC}"
echo ""

CURRENT_NAME=$(git config --global user.name)
CURRENT_EMAIL=$(git config --global user.email)

if [ -z "$CURRENT_NAME" ]; then
    echo "Seu nome ainda n√£o est√° configurado no Git."
    read -p "Digite seu nome completo: " USER_NAME
    git config --global user.name "$USER_NAME"
    echo -e "${GREEN}‚úì Nome configurado: $USER_NAME${NC}"
else
    echo -e "${GREEN}‚úì Nome j√° configurado: $CURRENT_NAME${NC}"
    read -p "Deseja alterar? (s/N): " CHANGE_NAME
    if [ "$CHANGE_NAME" = "s" ] || [ "$CHANGE_NAME" = "S" ]; then
        read -p "Digite seu novo nome: " USER_NAME
        git config --global user.name "$USER_NAME"
        echo -e "${GREEN}‚úì Nome atualizado${NC}"
    fi
fi

echo ""

if [ -z "$CURRENT_EMAIL" ]; then
    echo "Seu email ainda n√£o est√° configurado no Git."
    read -p "Digite seu email do GitHub: " USER_EMAIL
    git config --global user.email "$USER_EMAIL"
    echo -e "${GREEN}‚úì Email configurado: $USER_EMAIL${NC}"
else
    echo -e "${GREEN}‚úì Email j√° configurado: $CURRENT_EMAIL${NC}"
    read -p "Deseja alterar? (s/N): " CHANGE_EMAIL
    if [ "$CHANGE_EMAIL" = "s" ] || [ "$CHANGE_EMAIL" = "S" ]; then
        read -p "Digite seu novo email: " USER_EMAIL
        git config --global user.email "$USER_EMAIL"
        echo -e "${GREEN}‚úì Email atualizado${NC}"
    fi
fi

echo ""
echo -e "${YELLOW}‚ïê‚ïê‚ïê Passo 2: Criar Personal Access Token no GitHub ‚ïê‚ïê‚ïê${NC}"
echo ""
echo -e "${BLUE}Siga estas instru√ß√µes cuidadosamente:${NC}"
echo ""
echo "1. Clique neste link (ou copie para o navegador):"
echo -e "   ${BLUE}https://github.com/settings/tokens/new${NC}"
echo ""
echo "2. Fa√ßa login no GitHub com sua conta"
echo ""
echo "3. Configure o token:"
echo -e "   ‚Ä¢ Nome do token: ${GREEN}Git Lab SO 2025${NC} (ou outro nome descritivo)"
echo -e "   ‚Ä¢ Expira√ß√£o: ${GREEN}90 days${NC} (recomendado para o semestre)"
echo "   ‚Ä¢ Escopos necess√°rios - marque APENAS:"
echo -e "     ‚òëÔ∏è  ${GREEN}repo${NC} (Full control of private repositories)"
echo ""
echo -e "4. Role at√© o final da p√°gina e clique em ${GREEN}Generate token${NC}"
echo ""
echo -e "5. ${RED}IMPORTANTE:${NC} O token aparecer√° APENAS UMA VEZ!"
echo "   Copie o token que come√ßa com 'ghp_...'"
echo ""
echo -e "${YELLOW}Pressione ENTER quando estiver pronto para colar o token...${NC}"
read

# Passo 3: Coletar o token
echo ""
echo -e "${YELLOW}‚ïê‚ïê‚ïê Passo 3: Inserir o Token ‚ïê‚ïê‚ïê${NC}"
echo ""
echo "Cole seu Personal Access Token abaixo:"
echo "(ao colar, por seguran√ßa n√£o vai aparecer nada)"
echo ""

# Ler token com seguran√ßa (n√£o mostra na tela)
read -s -p "Token: " TOKEN
echo ""

# Validar token
if [ -z "$TOKEN" ]; then
    echo -e "${RED}‚úó Token n√£o pode estar vazio!${NC}"
    exit 1
fi

if [[ ! "$TOKEN" =~ ^ghp_ ]]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Aviso: O token normalmente come√ßa com 'ghp_'${NC}"
    read -p "Deseja continuar mesmo assim? (s/N): " CONTINUE
    if [ "$CONTINUE" != "s" ] && [ "$CONTINUE" != "S" ]; then
        echo -e "${RED}Configura√ß√£o cancelada.${NC}"
        exit 1
    fi
fi

echo -e "${GREEN}‚úì Token recebido (${#TOKEN} caracteres)${NC}"
echo ""

# Passo 4: Configurar credenciais
echo -e "${YELLOW}‚ïê‚ïê‚ïê Passo 4: Configurar Autentica√ß√£o ‚ïê‚ïê‚ïê${NC}"
echo ""

# Configurar credential helper
git config --global credential.helper store

# Configurar URL com token
git config --global url."https://${TOKEN}@github.com/".insteadOf "https://github.com/"

echo -e "${GREEN}‚úì Autentica√ß√£o configurada com sucesso!${NC}"
echo ""

# Passo 5: Testar configura√ß√£o
echo -e "${YELLOW}‚ïê‚ïê‚ïê Passo 5: Testar Configura√ß√£o ‚ïê‚ïê‚ïê${NC}"
echo ""
echo "Testando conex√£o com GitHub..."

# Tentar acessar um endpoint da API do GitHub
if curl -s -H "Authorization: token $TOKEN" https://api.github.com/user > /dev/null 2>&1; then
    echo -e "${GREEN}‚úì Conex√£o com GitHub funcionando!${NC}"
    echo ""
    
    # Obter informa√ß√µes do usu√°rio
    USERNAME=$(curl -s -H "Authorization: token $TOKEN" https://api.github.com/user | grep -o '"login":"[^"]*' | sed 's/"login":"//')
    if [ ! -z "$USERNAME" ]; then
        echo -e "${GREEN}‚úì Autenticado como: $USERNAME${NC}"
    fi
else
    echo -e "${YELLOW}‚ö†Ô∏è  N√£o foi poss√≠vel verificar a conex√£o automaticamente.${NC}"
    echo "   Isso pode ser normal. Teste clonando um reposit√≥rio privado."
fi

echo ""
echo -e "${BLUE}==========================================================${NC}"
echo -e "${GREEN}           üéâ Configura√ß√£o Conclu√≠da com Sucesso! üéâ      ${NC}"
echo -e "${BLUE}==========================================================${NC}"
echo ""
echo -e "${GREEN}Voc√™ j√° pode:${NC}"
echo "‚Ä¢ Clonar reposit√≥rios privados"
echo "‚Ä¢ Fazer push para seus reposit√≥rios"
echo "‚Ä¢ Usar todos os comandos git normalmente"
echo ""
echo -e "${YELLOW}Exemplo de uso:${NC}"
echo "git clone https://github.com/fci-sisop20252/lab2-syscalls-SEU_USUARIO.git"
echo ""
echo -e "${RED}Lembretes de Seguran√ßa:${NC}"
echo "‚Ä¢ Seu token est√° salvo em ~/.git-credentials"
echo "‚Ä¢ NUNCA compartilhe este arquivo ou seu token"
echo "‚Ä¢ Se suspeitar que o token foi comprometido, revogue-o imediatamente em:"
echo "  https://github.com/settings/tokens"
echo ""
echo -e "${BLUE}Para revogar este token no futuro:${NC}"
echo "1. Acesse: https://github.com/settings/tokens"
echo "2. Encontre o token 'Git Lab SO 2025'"
echo "3. Clique em 'Delete'"
echo ""

# Criar arquivo de backup das configura√ß√µes
BACKUP_FILE="$HOME/.git-config-backup-$(date +%Y%m%d-%H%M%S).txt"
echo "Data: $(date)" > "$BACKUP_FILE"
echo "Nome: $(git config --global user.name)" >> "$BACKUP_FILE"
echo "Email: $(git config --global user.email)" >> "$BACKUP_FILE"
echo "Token configurado: Sim (n√£o salvo por seguran√ßa)" >> "$BACKUP_FILE"
chmod 600 "$BACKUP_FILE"

echo -e "${GREEN}‚úì Backup das configura√ß√µes salvo em: $BACKUP_FILE${NC}"
echo ""
echo -e "${GREEN}Configura√ß√£o finalizada! Voc√™ est√° pronto para usar o Git com GitHub.${NC}"